import mongoose from 'mongoose';
import User from './models/user.js';
import dotenv from 'dotenv';

dotenv.config();

const makeUserAdmin = async (userName) => {
  try {
    // Conectar ao MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Conectado ao MongoDB');

    // Encontrar o usu√°rio pelo nome
    const user = await User.findOne({ name: userName });
    
    if (!user) {
      console.log(`‚ùå Usu√°rio "${userName}" n√£o encontrado`);
      return;
    }

    // Tornar o usu√°rio administrador
    user.isAdmin = true;
    await user.save();

    console.log(`‚úÖ Usu√°rio "${userName}" agora √© administrador!`);
    console.log('Voc√™ pode fazer login e acessar /admin');
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Desconectado do MongoDB');
  }
};

// Substitua 'SEU_NOME_DE_USUARIO' pelo nome do usu√°rio que voc√™ quer tornar admin
const userName = process.argv[2] || 'SEU_NOME_DE_USUARIO';

if (userName === 'SEU_NOME_DE_USUARIO') {
  console.log('‚ùå Por favor, forne√ßa o nome do usu√°rio:');
  console.log('node makeAdmin.js NOME_DO_USUARIO');
  process.exit(1);
}

makeUserAdmin(userName);
